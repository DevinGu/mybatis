<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>Spring公共配置</description>

    <!-- 引入配置文件,定义受环境影响易变的变量 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>

        <property name="locations">
            <list>
                <!--标准配置-->
                <value>classpath*:properties/jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- 自动扫描包 ,将带有注解的类 纳入spring容器管理 -->
    <!-- 使用annotation 自动注册bean，并且保证@Required，@Autowired的属性被注入-->
    <context:component-scan base-package="cn.devin"></context:component-scan>



    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <property name="validationQuery" value="select 1" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat" />
    </bean>

    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"-->
          <!--p:driverClass="${driver}"-->
          <!--p:jdbcUrl="${url}"-->
          <!--p:user="${username}"-->
          <!--p:password="${password}"-->
          <!--p:idleConnectionTestPeriod="${idleConnectionTestPeriod}"-->
          <!--p:maxIdleTime="${maxIdleTime}"-->
          <!--p:acquireIncrement="${acquireIncrement}"-->
          <!--p:initialPoolSize="${initialPoolSize}"-->
          <!--p:maxPoolSize="${maxPoolSize}"-->
          <!--p:minPoolSize="${minPoolSize}"-->
          <!--p:autoCommitOnClose="${autoCommitOnClose}"-->
          <!--p:checkoutTimeout="${checkoutTimeout}"-->
          <!--p:acquireRetryAttempts="${acquireRetryAttempts}"-->
          <!--p:preferredTestQuery="SELECT 1"-->
          <!--p:maxConnectionAge="3000" />-->

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件，**表示迭代查找-->
        <property name="mapperLocations" value="classpath:mappings/**/*.xml"/>
    </bean>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <!-- DAO接口所在包名，Spring会自动查找其下的类，包下的类需要使用@MapperScan注解，否则容器注入会失败-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.devin.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 对dataSource 数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 启用对事务注解的支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>